// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro

#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp Q  &kp W  &kp E  &kp R  &kp T             &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F  &kp G             &kp H      &kp J  &kp K      &kp L    &kp SQT
&kp Z  &kp X  &kp C  &kp V  &kp B             &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH
                     &mo 1  &kp LEFT_SHIFT    &kp SPACE  &mo 3
            >;

            label = "base";
        };

        extend_layer {
            bindings = <
&kp ESC       &kp K_BACK    &trans          &kp K_FORWARD     &kp INSERT       &kp PG_UP      &kp HOME        &kp UP_ARROW    &kp END     &kp CAPSLOCK
&kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp RIGHT_ALT    &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT   &kp DELETE
&kp LC(Z)     &kp LC(X)     &kp LC(C)       &kp DELETE        &kp LC(V)        &kp ENTER      &kp BACKSPACE   &kp TAB         &kp K_MENU  &kp PRINTSCREEN
                                            &trans            &trans           &kp ENTER      &trans
            >;

            label = "extend";
        };

        function_layer {
            bindings = <
&trans    &kp LBKT  &kp LBRC  &kp RBRC  &trans       &kp CARET  &kp LPAR   &kp RPAR   &kp RBKT  &kp TILDE
&kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp ASTRK  &kp MINUS  &kp EQUAL  &kp BSLH  &kp GRAVE
&trans    &trans    &trans    &trans    &trans       &kp AMPS   &kp UNDER  &kp PLUS   &kp PIPE  &trans
                              &trans    &trans       &trans     &trans
            >;

            label = "function";
        };

        symbols_layer {
            bindings = <
&sys_reset   &trans  &trans  &trans      &bt BT_SEL 0    &trans  &trans  &trans  &trans  &sys_reset
&bootloader  &trans  &trans  &trans      &bt BT_SEL 1    &trans  &trans  &trans  &trans  &bootloader
&trans       &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &trans  &trans  &trans  &trans  &trans
                             &trans      &trans          &trans  &trans
            >;

            label = "symbols";
        };

        numbers_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;

            label = "numbers";
        };
    };
};
